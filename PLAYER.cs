///////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ███████████████████████▀█████████████████████████████▀████████████████████████
 * █████████████████████▀   '▀████████████████████████▀   '▀█████████████████████
 * ███████████████████▀        '▀███████████████████▀        '▀██████████████████
 * █████████████████▀             '▀██████████████▀             '▀███████████████
 * ███████████████▀                  '▀█████████▀                  '▀████████████
 * █████████████▀      ▄             ▄████████▀                       '▀█████████
 * ███████████▀      ▄███▄,        ▄████▀▀▀▀▀      ▄█▄,                  '▀██████
 * █████████▀      ▄████████▄,   ▄███▀           ▄██████▄,                  '▀███
 * ███████▀        '▀██████████▄████    I O N   ▐██████████▄,                ▄███
 * █████▀             '▀███████████▌     API     █████████████▄,           ▄█████
 * ███▀                  '▀████████▀	  #     ███▀ '▀██████████▄       ▄███████
 * ████▄,                   '▀███▀          ▄▄███▀      '▀██████▀      ▄█████████
 * ███████▄,                   ▀      ▄████████▀           '▀█▀      ▄███████████
 * ██████████▄,                     ▄████████▀                     ▄█████████████
 * █████████████▄,                ▄████████████▄,                ▄███████████████
 * ████████████████▄,           ▄█████████████████▄,           ▄█████████████████
 * ███████████████████▄,      ▄██████████████████████▄,      ▄███████████████████
 * ██████████████████████▄, ▄███████████████████████████▄, ▄█████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 *
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of M-12 technology Incorporated and its suppliers.
 * The intellectual and technical concepts contained
 * herein are proprietary to M-12 Technology Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from M-12 technology Incorporated.
 * 
 * Website  : http://www.m12.technology
 *
 * Facebook : https://www.facebook.com/m12.technology
 * 
 * Twitter  : https://twitter.com/ION_CODE
 * 
 * Youtube  : https://www.youtube.com/user/TheVersio/
 * 
 * E-mail   : m12.software.technology@gmail.com
 * 
 * Developer : ION
 * 
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////
using Ion;
///////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
///////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Blaster
{
	public class PLAYER : MONOBEHAVIOUR
	{
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■
		//----------------------------------------------------------------------------------------------------
		public static int Score;
		public static int Power;
		public static int Shield;
		public static int Bomb;
		//----------------------------------------------------------------------------------------------------
		public static bool GameOver = false;
		//----------------------------------------------------------------------------------------------------
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■


		//====================================================================================================
		// ■ START
		//====================================================================================================
		void Start()
		{
			Score = 0;
			Power = 90;
			Shield = 90;
			Bomb = 8;

		}
		//====================================================================================================
		// ■ UPDATE
		//====================================================================================================
		void Update()
		{

		}
		//====================================================================================================
		// ■ IS DEAD
		//====================================================================================================
		public bool IsDead()
		{

			return false;
		}
		//====================================================================================================
		// ■ GET BOMB
		//====================================================================================================
		public static bool GetBomb()
		{
			if (Bomb > 0)
			{
				Bomb--;
				return true;
			}

			return false;
		}
		//====================================================================================================
		// ■ ADD BOMB
		//====================================================================================================
		public static void AddBomb(int bomb)
		{
			Bomb += bomb;
			
			//Bomb = math.min(9, Bomb);
		}
		//====================================================================================================
		// ■ ADD SCORE
		//====================================================================================================
		public static void AddScore(int score)
		{
			int s = Score / 1000;
			Score += score;
			int s2 = Score / 1000;

			if (s != s2) AddBomb(1);
		}
		//====================================================================================================
		// ■ ADD POWER
		//====================================================================================================
		public static void AddPower(int power)
		{
			Power += power;

			Power = math.min(100, Power);
		}
		//====================================================================================================
		// ■ SUB POWER
		//====================================================================================================
		public static void SubPower(int power)
		{
			Power -= power;

			Power = math.max(0, Power);

			if (Power == 0) GameOver = true;
		}
		//====================================================================================================
		// ■ ADD SHIELD
		//====================================================================================================
		public static void AddShield(int shield)
		{
			Shield += shield;
			Shield = math.min(100, Shield);
		}
		//====================================================================================================
		// ■ SUB SHIELD
		//====================================================================================================
		public static void SubShield(int shield)
		{
			Shield -= shield;

			Shield = math.max(0, Shield);
		}
		//====================================================================================================
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
