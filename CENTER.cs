///////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ███████████████████████▀█████████████████████████████▀████████████████████████
 * █████████████████████▀   '▀████████████████████████▀   '▀█████████████████████
 * ███████████████████▀        '▀███████████████████▀        '▀██████████████████
 * █████████████████▀             '▀██████████████▀             '▀███████████████
 * ███████████████▀                  '▀█████████▀                  '▀████████████
 * █████████████▀      ▄             ▄████████▀                       '▀█████████
 * ███████████▀      ▄███▄,        ▄████▀▀▀▀▀      ▄█▄,                  '▀██████
 * █████████▀      ▄████████▄,   ▄███▀           ▄██████▄,                  '▀███
 * ███████▀        '▀██████████▄████    I O N   ▐██████████▄,                ▄███
 * █████▀             '▀███████████▌     API     █████████████▄,           ▄█████
 * ███▀                  '▀████████▀	  #     ███▀ '▀██████████▄       ▄███████
 * ████▄,                   '▀███▀          ▄▄███▀      '▀██████▀      ▄█████████
 * ███████▄,                   ▀      ▄████████▀           '▀█▀      ▄███████████
 * ██████████▄,                     ▄████████▀                     ▄█████████████
 * █████████████▄,                ▄████████████▄,                ▄███████████████
 * ████████████████▄,           ▄█████████████████▄,           ▄█████████████████
 * ███████████████████▄,      ▄██████████████████████▄,      ▄███████████████████
 * ██████████████████████▄, ▄███████████████████████████▄, ▄█████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 *
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of M-12 technology Incorporated and its suppliers.
 * The intellectual and technical concepts contained
 * herein are proprietary to M-12 Technology Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from M-12 technology Incorporated.
 * 
 * Website  : http://www.m12.technology
 *
 * Facebook : https://www.facebook.com/m12.technology
 * 
 * Twitter  : https://twitter.com/ION_CODE
 * 
 * Youtube  : https://www.youtube.com/user/TheVersio/
 * 
 * E-mail   : m12.software.technology@gmail.com
 * 
 * Developer : ION
 * 
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////
using Ion;
///////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using UNITY = UnityEngine;
///////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Blaster
{
	public class CENTER : MONOBEHAVIOUR
	{
		public enum STATE { Terrain, Space }

		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■
		//----------------------------------------------------------------------------------------------------
		public float Speed = 10;
		float SpeedAcceleration = 0.3f;
		float SpeedSlowdown = 0.97f;
		float MaximalSpeed = 100.0f;
		//----------------------------------------------------------------------------------------------------
		float RotationSpeed = 150;
		//----------------------------------------------------------------------------------------------------
		float SpaceHeight;
		//----------------------------------------------------------------------------------------------------
		public STATE State = STATE.Space;
		//----------------------------------------------------------------------------------------------------
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■


		//====================================================================================================
		// ■ START
		//====================================================================================================
		void Start()
		{
			SpaceHeight = math.distance(Transform.Position, new float3(0, 0, 0));
		}
		//====================================================================================================
		// ■ UPDATE
		//====================================================================================================
		void Update()
		{

			//Rotate Root 
			var center = new float3(0, 0, 0);
			var axis = math.cross(Transform.Up, Transform.Position - center);
			transform.RotateAround(center, axis, -Speed * TIME.deltaTime);

		}
		//====================================================================================================
		// ■ GUI
		//====================================================================================================
		void OnGUI()
		{

		}
		//====================================================================================================
		// ■ GET HEIGHT
		//====================================================================================================
		public float GetHeight()
		{
			return SpaceHeight;
		}
		//====================================================================================================
		// ■ CHANGE HEIGHT
		//====================================================================================================
		public void ChangeHeight()
		{
			if (State == STATE.Space)
			{
				State = STATE.Terrain;
			}
			else
			{
				State = STATE.Space;
			}

		}
		//====================================================================================================
		// ■ TURN LEFT
		//====================================================================================================
		public void TurnLeft()
		{
			Transform.Rotate(new float3(0, 0, 1), RotationSpeed * TIME.deltaTime);
		}
		//====================================================================================================
		// ■ TURN RIGHT
		//====================================================================================================
		public void TurnRight()
		{
			Transform.Rotate(new float3(0, 0, 1), -RotationSpeed * TIME.deltaTime);
		}
		//====================================================================================================
		// ■ SPEED UP
		//====================================================================================================
		public void SpeedUp()
		{
			if (Speed < MaximalSpeed)
			{
				Speed = Speed + SpeedAcceleration;
				//		rigidbody.AddForce(transform.forward * 10, ForceMode.Acceleration); 
				//		transform.RotateAround(Vector2.zero, transform.right, (1.0f - (Speed/MaximalSpeed)) * -10 * Time.deltaTime);
			}
		}
		//====================================================================================================
		// ■ SPEED DOWN
		//====================================================================================================
		public void SpeedDown()
		{
			Speed = Speed * SpeedSlowdown;
			if (Speed > 0.01f)
			{
				//			rigidbody.AddForce(-transform.forward * 10, ForceMode.Acceleration);
				//			transform.RotateAround(Vector2.zero, transform.right, (Speed / MaximalSpeed) * 20 * Time.deltaTime);
			}
		}
		//====================================================================================================
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// <image url="C:\Users\ION\Desktop\Visual Studio Documentation\logo.jpg" scale="0.5"  opacity="0.8"/>
