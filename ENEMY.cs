///////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ███████████████████████▀█████████████████████████████▀████████████████████████
 * █████████████████████▀   '▀████████████████████████▀   '▀█████████████████████
 * ███████████████████▀        '▀███████████████████▀        '▀██████████████████
 * █████████████████▀             '▀██████████████▀             '▀███████████████
 * ███████████████▀                  '▀█████████▀                  '▀████████████
 * █████████████▀      ▄             ▄████████▀                       '▀█████████
 * ███████████▀      ▄███▄,        ▄████▀▀▀▀▀      ▄█▄,                  '▀██████
 * █████████▀      ▄████████▄,   ▄███▀           ▄██████▄,                  '▀███
 * ███████▀        '▀██████████▄████    I O N   ▐██████████▄,                ▄███
 * █████▀             '▀███████████▌     API     █████████████▄,           ▄█████
 * ███▀                  '▀████████▀	  #     ███▀ '▀██████████▄       ▄███████
 * ████▄,                   '▀███▀          ▄▄███▀      '▀██████▀      ▄█████████
 * ███████▄,                   ▀      ▄████████▀           '▀█▀      ▄███████████
 * ██████████▄,                     ▄████████▀                     ▄█████████████
 * █████████████▄,                ▄████████████▄,                ▄███████████████
 * ████████████████▄,           ▄█████████████████▄,           ▄█████████████████
 * ███████████████████▄,      ▄██████████████████████▄,      ▄███████████████████
 * ██████████████████████▄, ▄███████████████████████████▄, ▄█████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 *
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of M-12 technology Incorporated and its suppliers.
 * The intellectual and technical concepts contained
 * herein are proprietary to M-12 Technology Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from M-12 technology Incorporated.
 * 
 * Website  : http://www.m12.technology
 *
 * Facebook : https://www.facebook.com/m12.technology
 * 
 * Twitter  : https://twitter.com/ION_CODE
 * 
 * Youtube  : https://www.youtube.com/user/TheVersio/
 * 
 * E-mail   : m12.software.technology@gmail.com
 * 
 * Developer : ION
 * 
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////
using Ion;
///////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
///////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Blaster
{
	public class ENEMY : MONOBEHAVIOUR
	{
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■
		//----------------------------------------------------------------------------------------------------
		List<GAMEOBJECT> EnemyList;
		List<GAMEOBJECT> TargetList;
		//----------------------------------------------------------------------------------------------------
		public int EnemyCount;
		//----------------------------------------------------------------------------------------------------
		int NextElement = 0;
		//----------------------------------------------------------------------------------------------------
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■


		//====================================================================================================
		// ■ AWAKE
		//====================================================================================================
		void Awake()
		{
			EnemyList = new List<GAMEOBJECT>();
			TargetList = new List<GAMEOBJECT>();
		}
		//====================================================================================================
		// ■ START
		//====================================================================================================
		void Start()
		{
		}
		//====================================================================================================
		// ■ UPDATE
		//====================================================================================================
		void Update()
		{
			EnemyCount = EnemyList.Count;
		}
		//====================================================================================================
		// ■ ADD ENEMY
		//====================================================================================================
		public void AddEnemy(GAMEOBJECT gameObject)
		{
			EnemyList.Add(gameObject);
		}
		//====================================================================================================
		// ■ REMOVE ENEMY
		//====================================================================================================
		public bool RemoveEnemy(GAMEOBJECT gameObject)
		{
			int count = EnemyList.Count;
			bool find = false;
			for (int i = 0; i < count; i++)
			{
				if (gameObject == EnemyList[i])
				{
					EnemyList.RemoveAt(i);
					find = true;
				}
			}
			return find;
		}
		//====================================================================================================
		// ■ ADD TARGET
		//====================================================================================================
		public void AddTarget(GAMEOBJECT gameObject)
		{
			TargetList.Add(gameObject);
		}
		//====================================================================================================
		// ■ REMOVE TARGET
		//====================================================================================================
		public bool RemoveTarget(GAMEOBJECT gameObject)
		{
			int count = TargetList.Count;
			for (int i = 0; i < count; i++)
			{
				if (gameObject == TargetList[i])
				{
					TargetList.RemoveAt(i);
					return true;
				}
			}
			return false;
		}
		//====================================================================================================
		// ■ CHECK TARGET
		//====================================================================================================
		public bool CheckTarget(GAMEOBJECT gameObject)
		{
			int count = TargetList.Count;
			for (int i = 0; i < count; i++)
			{
				if (gameObject == TargetList[i])
				{
					return true;
				}
			}
			return false;
		}
		//====================================================================================================
		// ■ GET ENEMY
		//====================================================================================================
		public GAMEOBJECT GetEnemy()
		{
			int count = EnemyList.Count;
			if (NextElement >= count) NextElement = 0;
			if (count > 0)
			{
				return EnemyList[NextElement];
			}
			else
			{
				return null;
			}
		}
		//====================================================================================================
		// ■ GET ENEMY COUNT
		//====================================================================================================
		public int GetEnemyCount()
		{
			return EnemyList.Count;
		}
		//====================================================================================================
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// <image url="C:\Users\ION\Desktop\Visual Studio Documentation\logo.jpg" scale="0.5"  opacity="0.8"/>
